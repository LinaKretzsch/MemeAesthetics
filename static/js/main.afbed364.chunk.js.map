{"version":3,"sources":["Components/ImageContainer.module.css","Components/ImageContainer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ImageContainer","props","liberalImgPath","useState","imgPath","setImgPath","userGuess","setUserGuess","useEffect","checkUserGuess","e","preventDefault","substring","target","value","setTimeout","onGuess","className","style","popupContainer","display","popup","correctGuess","wrongGuess","img","src","alt","btns","leftBtn","onClick","generateBtn","Math","floor","random","console","log","onGenerate","rightBtn","App","setClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,MAAQ,8BAA8B,aAAe,qCAAqC,WAAa,mCAAmC,IAAM,4BAA4B,KAAO,6BAA6B,QAAU,gCAAgC,SAAW,iCAAiC,YAAc,sC,kKCgG/WC,EA9FQ,SAACC,GAEtB,IAAMC,EAAiB,kBAMvB,EAA4BC,mBAAS,wBAArC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAKG,EAAL,KAAgBC,EAAhB,KAEAC,qBAAU,cAAU,CAACJ,EAASE,IAG9B,IAYMG,EAAiB,SAACC,GAEtBA,EAAEC,iBAIAP,EAAQQ,UAAU,EAAG,MAAQF,EAAEG,OAAOC,OACtCV,EAAQQ,UAAU,EAAG,MAAQF,EAAEG,OAAOC,OAEtCP,EAAa,WACbQ,YAAW,WACTR,EAAa,MACZ,QAEHA,EAAa,SACbQ,YAAW,WACTR,EAAa,MACZ,OAMLN,EAAMe,QACJZ,EAAQQ,UAAU,EAAG,MAAQV,EAAiB,UAAY,iBAI9D,OACE,gCACE,qBACEe,UAAWC,IAAMC,eACjBD,MAAqB,KAAdZ,EAAmB,CAAEc,QAAS,QAAW,CAAEA,QAAS,QAF7D,SAIE,qBAAKH,UAAWC,IAAMG,MAAtB,SACE,oBACEJ,UACgB,YAAdX,EAA0BY,IAAMI,aAAeJ,IAAMK,WAFzD,SAKGjB,QAIP,qBAAKW,UAAWC,IAAMM,IAAKC,IAAKrB,EAASsB,IAAI,KAC7C,sBAAKT,UAAWC,IAAMS,KAAtB,UACE,wBACEV,UAAWC,IAAMU,QACjBC,QAASpB,EACTK,MAAM,UAHR,uBAOA,wBAAQG,UAAWC,IAAMY,YAAaD,QAjEZ,WAC9BxB,EACoC,IAAlC0B,KAAKC,MAAsB,EAAhBD,KAAKE,UACZ/B,EAAiB6B,KAAKC,MAXX,GAWiBD,KAAKE,UAA2B,OAdxC,uBAgBlBF,KAAKC,MAbI,GAaED,KAAKE,UAChB,QAERC,QAAQC,IAAI/B,GACZH,EAAMmC,cAwDF,2BAGA,wBACEnB,UAAWC,IAAMmB,SACjBR,QAASpB,EACTK,MAAM,eAHR,+BCjDOwB,MAtBf,SAAarC,GAEX,MAAgCE,mBAAS,gBAAzC,mBAAKc,EAAL,KAAgBsB,EAAhB,KAYA,OAVA/B,qBAAU,WAAO0B,QAAQC,IAAI,cAAelB,KAAa,CAACA,IAWxD,sBAAKA,UAAWA,EAAhB,UACE,iDACA,cAAC,EAAD,CAAgBD,QAXG,SAACf,GACtBsC,EAAa,gBAAkBtC,IAUYmC,WAPvB,WACpBG,EAAa,uBCbFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.afbed364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupContainer\":\"ImageContainer_popupContainer__3_kxb\",\"popup\":\"ImageContainer_popup__2i6-7\",\"correctGuess\":\"ImageContainer_correctGuess__2MgyC\",\"wrongGuess\":\"ImageContainer_wrongGuess__1amOt\",\"img\":\"ImageContainer_img__knWX-\",\"btns\":\"ImageContainer_btns__3symr\",\"leftBtn\":\"ImageContainer_leftBtn__3U3-Y\",\"rightBtn\":\"ImageContainer_rightBtn__1Vs1j\",\"generateBtn\":\"ImageContainer_generateBtn__yXhcx\"};","import React, { useEffect, useState } from \"react\";\nimport style from \"./ImageContainer.module.css\";\n\nconst ImageContainer = (props) => {\n  // Img paths for liberal and conservative generated memes\n  const liberalImgPath = \"../Img/Liberal/\";\n  const conservativeImgPath = \"../Img/Conservative/\";\n\n  // Limits the bound of the random image that can be opened\n  let imgsInFolder = 15;\n\n  let [imgPath, setImgPath] = useState(\"../Img/Liberal/0.png\");\n  let [userGuess, setUserGuess] = useState(\"\");\n\n  useEffect(() => {}, [imgPath, userGuess]);\n\n  // Generate random image number to generate upon button click\n  const generateRandomImagePath = () => {\n    setImgPath(\n      Math.floor(Math.random() * 2) === 0\n        ? liberalImgPath + Math.floor(Math.random() * imgsInFolder) + \".png\"\n        : conservativeImgPath +\n            Math.floor(Math.random() * imgsInFolder) +\n            \".png\"\n    );\n    console.log(imgPath);\n    props.onGenerate();\n  };\n\n  const checkUserGuess = (e) => {\n    // Preventing page to reload\n    e.preventDefault();\n\n    // Verify if user guessed correct or wrong and sets the userGuess state to Correct or Wrong for a few seconds to trigger the appearance of the popup\n    if (\n      imgPath.substring(7, 14) === e.target.value ||\n      imgPath.substring(7, 19) === e.target.value\n    ) {\n      setUserGuess(\"Correct\");\n      setTimeout(() => {\n        setUserGuess(\"\");\n      }, 1500);\n    } else {\n      setUserGuess(\"Wrong\");\n      setTimeout(() => {\n        setUserGuess(\"\");\n      }, 1500);\n    }\n\n    // Pass value to App in order to change the gradient background\n    // Background will change to blue if conservative meme is displayed\n    // Background will change to red if liberal meme is displayed\n    props.onGuess(\n      imgPath.substring(0, 15) === liberalImgPath ? \"liberal\" : \"conservative\"\n    );\n  };\n\n  return (\n    <div>\n      <div\n        className={style.popupContainer}\n        style={userGuess !== \"\" ? { display: \"flex\" } : { display: \"none\" }}\n      >\n        <div className={style.popup}>\n          <h2\n            className={\n              userGuess === \"Correct\" ? style.correctGuess : style.wrongGuess\n            }\n          >\n            {userGuess}\n          </h2>\n        </div>\n      </div>\n      <img className={style.img} src={imgPath} alt=\"\" />\n      <div className={style.btns}>\n        <button\n          className={style.leftBtn}\n          onClick={checkUserGuess}\n          value=\"Liberal\"\n        >\n          Left-Wing\n        </button>\n        <button className={style.generateBtn} onClick={generateRandomImagePath}>\n          Generate Meme\n        </button>\n        <button\n          className={style.rightBtn}\n          onClick={checkUserGuess}\n          value=\"Conservative\"\n        >\n          Right-Wing\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageContainer;\n","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport ImageContainer from './Components/ImageContainer.js';\n\n// Gradient code taken from https://codepen.io/JanickFischr/pen/BYvVqP\n\n\n// App - background gradient --> Button passes state to App to change background gradient to change\n// Title - here\n// Component - Image container --> Button triggers Image to change\n// Component - Buttons\n// Component - modal overlay\n// Component triggering error message to generate new meme if left or right is already clicked\n\nfunction App(props) {\n\n  let [className, setClassName] = useState(\"App gradient\");\n\n  useEffect(() => {console.log('Classname: ', className)}, [className]); \n\n  const changeGradient = (props) => {\n    setClassName(\"App gradient \" + props);\n  }\n\n  const resetGradient = () => {\n    setClassName(\"App gradient\");\n  }\n\n  return (\n    <div className={className}>\n      <h1>Meme Aesthetics</h1>\n      <ImageContainer onGuess={changeGradient} onGenerate={resetGradient}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}